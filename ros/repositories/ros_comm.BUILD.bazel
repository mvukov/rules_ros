""" Builds ros_comm.
"""

load("@bazel_skylib//lib:dicts.bzl", "dicts")
load("@bazel_skylib//lib:selects.bzl", "selects")
load("@bazel_skylib//rules:copy_file.bzl", "copy_file")
load("@rules_cc//cc:defs.bzl", "cc_library")
load("@rules_python//python:defs.bzl", "py_binary", "py_library")
load(
    "@rules_ros//ros:cc_defs.bzl",
    "cc_ros_binary",
    "cc_ros_library",
)
load(
    "@rules_ros//ros:interfaces.bzl",
    "cc_ros_interface_library",
    "py_ros_interface_library",
    "ros_interface_library",
)
load(
    "@rules_ros//third_party:expand_template.bzl",
    "expand_template",
)
load("@rules_ros_pip_deps//:requirements.bzl", "requirement")

cc_library(
    name = "libb64",
    srcs = glob(["utilities/xmlrpcpp/libb64/src/*.c"]),
    hdrs = glob(["utilities/xmlrpcpp/libb64/include/b64/*.h"]),
    includes = ["utilities/xmlrpcpp/libb64/include"],
    visibility = ["//visibility:private"],
)

cc_ros_library(
    name = "xmlrpcpp",
    srcs = glob(["utilities/xmlrpcpp/src/*.cpp"]),
    hdrs = glob(["utilities/xmlrpcpp/include/xmlrpcpp/*.h"]),
    includes = ["utilities/xmlrpcpp/include"],
    linkopts = ["-lm"],
    visibility = ["//visibility:public"],
    deps = [
        ":libb64",
        "@boost//:thread",
        "@roscpp_core//:cpp_common",
        "@roscpp_core//:rostime",
    ],
)

ros_interface_library(
    name = "roscpp",
    srcs = glob([
        "clients/roscpp/msg/*.msg",
        "clients/roscpp/srv/*.srv",
    ]),
    visibility = ["//visibility:public"],
)

cc_ros_interface_library(
    name = "cc_roscpp",
    visibility = ["//visibility:public"],
    deps = [":roscpp"],
)

py_ros_interface_library(
    name = "py_roscpp",
    visibility = ["//visibility:public"],
    deps = [":roscpp"],
)

ROS_VERSION_MAJOR = 1

ROS_VERSION_MINOR = 15

ROS_VERSION_PATCH = 9

_ROS_COMMON_H = "ros/common.h"

expand_template(
    name = "ros_common_h",
    out = _ROS_COMMON_H,
    substitutions = {
        "@roscpp_VERSION_MAJOR@": str(ROS_VERSION_MAJOR),
        "@roscpp_VERSION_MINOR@": str(ROS_VERSION_MINOR),
        "@roscpp_VERSION_PATCH@": str(ROS_VERSION_PATCH),
    },
    template = "clients/roscpp/include/ros/common.h.in",
)

_CONFIG_H = "config.h"

_CONFIG_COMMON_SUBSTITUTIONS = {
    "#cmakedefine HAVE_TRUNC": "#define HAVE_TRUNC",
    "#cmakedefine HAVE_IFADDRS_H": "#define HAVE_IFADDRS_H",
}

expand_template(
    name = "config_h",
    out = _CONFIG_H,
    substitutions = select(
        {
            "@platforms//os:linux": dicts.add(
                _CONFIG_COMMON_SUBSTITUTIONS,
                {"#cmakedefine HAVE_EPOLL": "#define HAVE_EPOLL"},
            ),
            "@platforms//os:macos": dicts.add(
                _CONFIG_COMMON_SUBSTITUTIONS,
                {"#cmakedefine HAVE_EPOLL": "/*#cmakedefine HAVE_EPOLL*/"},
            ),
        },
        no_match_error = "Supported OSs: Linux, macOS",
    ),
    template = "clients/roscpp/src/libros/config.h.in",
)

cc_ros_library(
    name = "roscpp_lib",
    srcs = glob(["clients/roscpp/src/libros/**/*.cpp"]) + [_CONFIG_H],
    hdrs = glob(["clients/roscpp/include/**/*.h"]) + [_ROS_COMMON_H],
    defines = ["BOOST_ALLOW_DEPRECATED_HEADERS"],
    includes = ["clients/roscpp/include"],
    linkopts = ["-lm"],
    ros_package_name = "roscpp",
    target_compatible_with = selects.with_or(
        {
            ("@platforms//os:linux", "@platforms//os:macos"): [],
            "//conditions:default": ["@platforms//:incompatible"],
        },
    ),
    visibility = ["//visibility:public"],
    deps = [
        ":cc_roscpp",
        ":xmlrpcpp",
        "@boost//:chrono",
        "@boost//:filesystem",
        "@boost//:scope_exit",
        "@boost//:signals2",
        "@boost//:system",
        "@ros_comm_msgs//:cc_rosgraph_msgs",
        "@ros_std_msgs//:cc_std_msgs",
        "@rosconsole",
        "@roscpp_core//:roscpp_serialization",
        "@roscpp_core//:roscpp_traits",
        "@roscpp_core//:rostime",
    ],
)

_DEFAULT_PYTHON_LOGGING_CONFIG = "tools/rosgraph/conf/python_logging.conf"

_LOGGING_CONFIG_PY = "tools/rosgraph/src/rosgraph/ros_logging_config.py"

expand_template(
    name = "ros_logging_config",
    out = _LOGGING_CONFIG_PY,
    data = [_DEFAULT_PYTHON_LOGGING_CONFIG],
    substitutions = {
        "{default_python_logging_conf}": "$(rootpath {})".format(_DEFAULT_PYTHON_LOGGING_CONFIG),
    },
    template = "@rules_ros//ros/repositories:ros_logging_config.py.tpl",
)

py_library(
    name = "rosgraph_lib",
    srcs = glob(["tools/rosgraph/src/**/*.py"]) + [_LOGGING_CONFIG_PY],
    data = [_DEFAULT_PYTHON_LOGGING_CONFIG],
    imports = ["tools/rosgraph/src"],
    visibility = ["//visibility:public"],
    deps = [
        requirement("ifaddr"),
        requirement("pyyaml"),
        requirement("rospkg"),
    ],
)

_ROSGRAPH_APP_PY = "rosgraph_app.py"

copy_file(
    name = "rosgraph_app",
    src = "tools/rosgraph/scripts/rosgraph",
    out = _ROSGRAPH_APP_PY,
)

py_binary(
    name = "rosgraph",
    srcs = [_ROSGRAPH_APP_PY],
    main = _ROSGRAPH_APP_PY,
    visibility = ["//visibility:public"],
    deps = [":rosgraph_lib"],
)

py_library(
    name = "rosmaster_lib",
    srcs = glob(
        ["tools/rosmaster/src/**/*.py"],
        exclude = ["tools/rosmaster/src/rosmaster/main.py"],
    ),
    imports = ["tools/rosmaster/src"],
    visibility = ["//visibility:public"],
    deps = [
        ":rosgraph_lib",
        requirement("defusedxml"),
    ],
)

py_binary(
    name = "rosmaster",
    srcs = ["tools/rosmaster/src/rosmaster/main.py"],
    main = "tools/rosmaster/src/rosmaster/main.py",
    visibility = ["//visibility:public"],
    deps = [":rosmaster_lib"],
)

py_library(
    name = "rosnode_lib",
    srcs = glob(
        ["tools/rosnode/src/rosnode/*.py"],
    ),
    imports = ["tools/rosnode/src"],
    visibility = ["//visibility:public"],
    deps = [
        ":rosgraph_lib",
        ":rostopic_lib",
        requirement("defusedxml"),
    ],
)

cc_ros_library(
    name = "roslz4",
    srcs = [
        "utilities/roslz4/src/lz4s.c",
        "utilities/roslz4/src/xxhash.c",
        "utilities/roslz4/src/xxhash.h",
    ],
    hdrs = glob(["utilities/roslz4/include/roslz4/*.h"]),
    includes = ["utilities/roslz4/include"],
    visibility = ["//visibility:public"],
    deps = [
        "@lz4",
        "@roscpp_core//:cpp_common",
    ],
)

cc_ros_library(
    name = "rosbag_storage",
    srcs = [
        "tools/rosbag_storage/src/bag.cpp",
        "tools/rosbag_storage/src/bag_player.cpp",
        "tools/rosbag_storage/src/buffer.cpp",
        "tools/rosbag_storage/src/bz2_stream.cpp",
        "tools/rosbag_storage/src/chunked_file.cpp",
        "tools/rosbag_storage/src/lz4_stream.cpp",
        "tools/rosbag_storage/src/message_instance.cpp",
        "tools/rosbag_storage/src/no_encryptor.cpp",
        "tools/rosbag_storage/src/query.cpp",
        "tools/rosbag_storage/src/stream.cpp",
        "tools/rosbag_storage/src/uncompressed_stream.cpp",
        "tools/rosbag_storage/src/view.cpp",
    ],
    hdrs = glob(["tools/rosbag_storage/include/rosbag/*.h"]),
    includes = ["tools/rosbag_storage/include"],
    visibility = ["//visibility:public"],
    deps = [
        ":roslz4",
        "@boost//:filesystem",
        "@boost//:format",
        "@bzip2//:bz2",
        "@console_bridge",
        "@roscpp_core//:roscpp_serialization",
        "@roscpp_core//:roscpp_traits",
        "@roscpp_core//:rostime",
    ],
)

cc_ros_library(
    name = "topic_tools",
    srcs = [
        "tools/topic_tools/src/parse.cpp",
        "tools/topic_tools/src/shape_shifter.cpp",
    ],
    hdrs = glob(["tools/topic_tools/include/topic_tools/*.h"]),
    includes = ["tools/topic_tools/include"],
    visibility = ["//visibility:public"],
    deps = [
        ":roscpp_lib",
        ":xmlrpcpp",
        "@ros_std_msgs//:cc_std_msgs",
        "@rosconsole",
        "@roscpp_core//:cpp_common",
        "@roscpp_core//:roscpp_serialization",
        "@roscpp_core//:roscpp_traits",
        "@roscpp_core//:rostime",
    ],
)

py_library(
    name = "py_topic_tools",
    srcs = glob(["tools/topic_tools/python/**/*.py"]),
    visibility = ["//visibility:public"],
    deps = [":rospy"],
)

cc_ros_library(
    name = "rosbag",
    srcs = [
        "tools/rosbag/src/player.cpp",
        "tools/rosbag/src/recorder.cpp",
        "tools/rosbag/src/time_translator.cpp",
    ],
    hdrs = glob(["tools/rosbag/include/rosbag/*.h"]),
    copts = ["-D_FILE_OFFSET_BITS=64"],
    includes = ["tools/rosbag/include"],
    visibility = ["//visibility:public"],
    deps = [
        ":rosbag_storage",
        ":roscpp_lib",
        ":topic_tools",
        "@boost//:date_time",
        "@boost//:filesystem",
        "@boost//:regex",
        "@boost//:thread",
        "@ros_comm_msgs//:cc_std_srvs",
    ],
)

cc_ros_binary(
    name = "rosbag_record",
    srcs = ["tools/rosbag/src/record.cpp"],
    visibility = ["//visibility:public"],
    deps = [
        ":rosbag",
        "@boost//:program_options",
    ],
)

cc_ros_binary(
    name = "rosbag_play",
    srcs = ["tools/rosbag/src/play.cpp"],
    visibility = ["//visibility:public"],
    deps = [
        ":rosbag",
        "@boost//:program_options",
    ],
)

py_library(
    name = "py_rosbag",
    srcs = ["tools/rosbag/src/rosbag/bag.py"],
    imports = ["tools/rosbag/src"],
    visibility = ["//visibility:public"],
    deps = [
        ":py_topic_tools",
        ":rospy",
        "@rules_ros//third_party/ros:roslib",
        requirement("gnupg"),
        requirement("pycryptodomex"),
        requirement("rospkg"),
    ],
)

py_library(
    name = "rospy",
    srcs = glob(["clients/rospy/src/**/*.py"]),
    imports = ["clients/rospy/src"],
    visibility = ["//visibility:public"],
    deps = [
        ":py_roscpp",
        ":rosgraph_lib",
        "@ros_comm_msgs//:py_rosgraph_msgs",
        "@ros_genpy//:genpy",
        "@ros_std_msgs//:py_std_msgs",
        "@rules_ros//third_party/ros:roslib",
        requirement("numpy"),
        requirement("pyyaml"),
        requirement("rospkg"),
    ],
)

py_library(
    name = "rostopic_lib",
    srcs = glob(["tools/rostopic/src/**/*.py"]),
    imports = ["tools/rostopic/src"],
    visibility = ["//visibility:public"],
    deps = [
        ":py_rosbag",
        ":rospy",
    ],
)

_ROSTOPIC_APP_PY = "rostopic_app.py"

copy_file(
    name = "rostopic_app",
    src = "tools/rostopic/scripts/rostopic",
    out = _ROSTOPIC_APP_PY,
    visibility = ["//visibility:public"],
)

py_library(
    name = "rosparam_lib",
    srcs = glob(["tools/rosparam/src/**/*.py"]),
    imports = ["tools/rosparam/src"],
    visibility = ["//visibility:public"],
    deps = [
        ":rosgraph_lib",
        requirement("pyyaml"),
    ],
)

_ROSPARAM_APP_PY = "rosparam_app.py"

copy_file(
    name = "rosparam_app",
    src = "tools/rosparam/scripts/rosparam",
    out = _ROSPARAM_APP_PY,
)

py_binary(
    name = "rosparam",
    srcs = [_ROSPARAM_APP_PY],
    main = _ROSPARAM_APP_PY,
    visibility = ["//visibility:public"],
    deps = [":rosparam_lib"],
)

cc_ros_binary(
    name = "rosout",
    srcs = ["tools/rosout/rosout.cpp"],
    visibility = ["//visibility:public"],
    deps = [
        ":roscpp_lib",
    ],
)

cc_ros_library(
    name = "message_filters",
    srcs = glob(["utilities/message_filters/src/*.cpp"]),
    hdrs = glob(["utilities/message_filters/include/**/*.h"]),
    includes = ["utilities/message_filters/include"],
    visibility = ["//visibility:public"],
    deps = [
        ":roscpp_lib",
        "@boost//:thread",
        "@rosconsole",
    ],
)

py_library(
    name = "py_message_filters",
    srcs = glob(["utilities/message_filters/src/message_filters/*.py"]),
    imports = ["utilities/message_filters/src/"],
    visibility = ["//visibility:public"],
    deps = [":rospy"],
)
