module(name = "rules_ros_examples")

bazel_dep(name = "rules_python", version = "0.38.0")
bazel_dep(name = "boost.any", version = "1.83.0")
bazel_dep(name = "boost.smart_ptr", version = "1.83.0.bcr.1")
bazel_dep(name = "boost.thread", version = "1.83.0")
bazel_dep(name = "rules_oci", version = "2.0.1")
bazel_dep(name = "rules_pkg", version = "1.0.1")

# This import is relevant for these examples and this (rules_ros) repository.
bazel_dep(name = "rules_ros")
local_path_override(
    module_name = "rules_ros",
    path = "..",
)

# In a normal workflow, you would typically import rules_ros into your
# (mono)repo as follows:
# bazel_dep(name = "rules_ros")
# archive_override(
#     module_name = "rules_ros",
#     integrity = "sha256-<integrity sum of the .tar.gz archive below>",
#     strip_prefix = "rules_ros-<git commit SHA>",
#     urls = "https://github.com/mvukov/rules_ros/archive/<git commit SHA>.tar.gz"
# )

non_module_ros_repositories = use_extension("@rules_ros//ros:extensions.bzl", "non_module_dependencies")
use_repo(
    non_module_ros_repositories,
    "console_bridge",
    "orocos_kdl",
    "ros_actionlib",
    "ros_comm",
    "ros_comm_msgs",
    "ros_common_msgs",
    "ros_dynamic_reconfigure",
    "ros_gencpp",
    "ros_genmsg",
    "ros_genpy",
    "ros_geometry2",
    "ros_ros",
    "ros_std_msgs",
    "rosconsole",
    "roscpp_core",
    "tinyxml",
    "urdfdom",
    "urdfdom_headers",
)

# in order to build an oci image with our ros nodes in it, one
# needs to define the base image to use, and that must be performed
# at the module level here. 
# NOTE: Even though the version of python that the nodes run in is contained
# in the runfiles, a version of python is required at the system level in order
# to run the roslaunch command.
oci = use_extension("@rules_oci//oci:extensions.bzl", "oci")
oci.pull(
    name = "rules_ros_base_image",
    image = "python:3.10-bookworm",
    digest = "sha256:fd0fa50d997eb56ce560c6e5ca6a1f5cf8fdff87572a16ac07fb1f5ca01eb608",
    platforms = ["linux/amd64"],
)
use_repo(oci, "rules_ros_base_image", "rules_ros_base_image_linux_amd64")
