load(
    "@com_github_mvukov_rules_ros//ros:cc_defs.bzl",
    "cc_ros_binary",
    "cc_ros_library",
)
load(
    "@com_github_mvukov_rules_ros//ros:interfaces.bzl",
    "cc_ros_interface_library",
    "ros_interface_library",
)
load("@rules_ros_pip_deps//:requirements.bzl", "requirement")

py_library(
    name = "py_tf",
    srcs = [
        "tf/src/tf/broadcaster.py",
        "tf/src/tf/listener.py",
        "tf/src/tf/tfwtf.py",
        "tf/src/tf/transformations.py",
    ],
    imports = ["tf/src"],
    visibility = ["//visibility:public"],
    deps = [
        requirement("numpy"),
    ],
)

ros_interface_library(
    name = "tf_interface",
    srcs = glob([
        "tf/msg/*",
        "tf/srv/*",
    ]),
    visibility = ["//visibility:public"],
    deps = [
        "@ros_common_msgs//:actionlib_msgs",
        "@ros_common_msgs//:geometry_msgs",
    ],
)

cc_ros_interface_library(
    name = "cc_tf_interface",
    deps = [":tf_interface"],
    strip_end = True,
    visibility = [
        "//visibility:public",
    ],
)

cc_ros_library(
    name = "tf",
    srcs = [
        "tf/src/cache.cpp",
        "tf/src/tf.cpp",
        "tf/src/transform_broadcaster.cpp",
        "tf/src/transform_listener.cpp",
    ],
    hdrs = glob(["tf/include/**/*.h", "tf/include/tf/transform_datatypes.h"]),
    includes = ["tf/include"],
    visibility = ["//visibility:public"],
    copts = [
        "-Igeometry",
        "-std=c++17",
    ],
    deps = [
        ":cc_tf_interface",
        "@boost//:signals2",
        "@boost//:thread",
        "@boost//:unordered",
        "@console_bridge",
        "@ros_common_msgs//:cc_geometry_msgs",
        "@ros_common_msgs//:cc_sensor_msgs",
        "@roscpp_core//:rostime",
        "@ros_comm//:roscpp_lib",
        "@ros_geometry2//:tf2",
        "@ros_geometry2//:tf2_ros",
        "@angles//:angles",
    ],
)

cc_ros_library(
    name = "tf_conversions",
    srcs = [
        "tf_conversions/src/tf_eigen.cpp",
        "tf_conversions/src/tf_kdl.cpp",
    ],
    hdrs = glob(["tf_conversions/include/**/*.h"]),
    includes = ["tf_conversions/include"],
    visibility = ["//visibility:public"],
    copts = [
        "-Igeometry",
        "-std=c++17",
    ],
    deps = [
        ":cc_tf_interface",
        ":tf",
        "@boost//:signals2",
        "@boost//:thread",
        "@boost//:unordered",
        "@console_bridge",
        "@ros_common_msgs//:cc_geometry_msgs",
        "@ros_common_msgs//:cc_sensor_msgs",
        "@roscpp_core//:rostime",
        "@ros_comm//:roscpp_lib",
        "@ros_geometry2//:tf2",
        "@ros_geometry2//:tf2_ros",
        "@angles//:angles",
        ":kdl_conversions",
    ],
)

cc_ros_library(
    name = "kdl_conversions",
    srcs = [
        "kdl_conversions/src/kdl_msg.cpp",
    ],
    hdrs = glob(["kdl_conversions/include/**/*.h"]),
    includes = ["kdl_conversions/include"],
    visibility = ["//visibility:public"],
    copts = [
        "-Igeometry",
        "-std=c++17",
    ],
    deps = [
        ":cc_tf_interface",
        "@boost//:signals2",
        "@boost//:thread",
        "@boost//:unordered",
        "@console_bridge",
        "@ros_common_msgs//:cc_geometry_msgs",
        "@ros_common_msgs//:cc_sensor_msgs",
        "@roscpp_core//:rostime",
        "@ros_comm//:roscpp_lib",
        "@ros_geometry2//:tf2",
        "@ros_geometry2//:tf2_ros",
        "@angles//:angles",
        "@orocos_kdl//:orocos_kdl",
    ],
)

cc_ros_library(
    name = "eigen_conversions",
    srcs = glob(["eigen_conversions/src/**/*.cpp"]),
    hdrs = glob(["eigen_conversions/include/**/*.h"]),
    includes = ["eigen_conversions/include"],
    visibility = ["//visibility:public"],
    copts = [
        "-Igeometry",
        "-std=c++17",
    ],
    deps = [
        ":cc_tf_interface",
        "@boost//:signals2",
        "@boost//:thread",
        "@boost//:unordered",
        "@console_bridge",
        "@ros_common_msgs//:cc_geometry_msgs",
        "@ros_common_msgs//:cc_sensor_msgs",
        "@roscpp_core//:rostime",
        "@ros_comm//:roscpp_lib",
        "@ros_geometry2//:tf2",
        "@ros_geometry2//:tf2_ros",
        "@angles//:angles",
        "@orocos_kdl//:orocos_kdl",
    ],
)

cc_binary(
    name = "static_transform_publisher",
    srcs = [
        "tf/src/static_transform_publisher.cpp",
        "tf/src/transform_broadcaster.cpp",
        "tf/src/tf.cpp",
    ] + glob(["tf/include/**"]),
    includes = ["tf/include"],
    deps = [
        "@ros_comm//:roscpp_lib",
        "@ros_geometry2//:tf2",
        "@ros_geometry2//:tf2_ros",
        ":cc_tf_interface",
        "@boost//:signals2",
        "@boost//:thread",
        "@boost//:unordered",
        "@console_bridge",
        "@ros_common_msgs//:cc_geometry_msgs",
        "@ros_common_msgs//:cc_sensor_msgs",
        "@roscpp_core//:rostime",
        "@angles//:angles",
    ],
    visibility = [
        "//visibility:public",
    ],
)
